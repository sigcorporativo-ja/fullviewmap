{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/fullviewmap.html","webpack:///./src/impl/ol/js/fullviewmapcontrol.js","webpack:///./src/facade/js/fullviewmapcontrol.js","webpack:///./src/facade/js/fullviewmap.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FullViewMapControl","M","impl","Control","map","html","_get","_getPrototypeOf","this","_this","fullviewmapcontrol_classCallCheck","utils","isUndefined","FullViewMapImplControl","exception","fullviewmapcontrol_possibleConstructorReturn","fullviewmapcontrol_getPrototypeOf","source_","document","addEventListener","e","checkFullScreen","_this2","Promise","success","fail","template","compileSync","querySelector","clickFullView_","body","element","map_","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","exitFullScreen","requestFullScreen","btn","className","title","webkitIsFullScreen","msFullscreenElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","exitFullscreen","msExitFullscreen","webkitExitFullscreen","control","FullViewMap","options","arguments","length","undefined","fullviewmap_classCallCheck","fullviewmap_possibleConstructorReturn","fullviewmap_getPrototypeOf","controls_","position_","position","fullViewMap_","metadata_","api","metadata","Plugin","control_","push","panel_","ui","Panel","collapsible","collapsedButtonClass","addControls","addPanels","removeControls","_ref","aControl","window","plugin","M$plugin$FullViewMap","M$control$FullViewMapControl","M$impl$control$FullViewMapControl"],"mappings":"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","file":"fullviewmap.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div class=\\\"m-plugin-fullviewmap\\\">\\n  <button id=\\\"btnFullView\\\" class=\\\"g-cartografia-tamano\\\" title=\\\"Pantalla Completa\\\"></button>\\n</div>\";","/**\n * @module M/impl/control/FullViewMapControl\n */\nexport default class FullViewMapControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n}\n","/**\n * @module M/control/FullViewMapControl\n */\n\nimport FullViewMapImplControl from 'impl/fullviewmapcontrol';\nimport template from 'templates/fullviewmap';\n\nconst isFullScreenSupported = () => {\n  const body = document.body;\n  return !!(body.webkitRequestFullscreen ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled));\n};\n\nexport default class FullViewMapControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor() {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(FullViewMapImplControl)) {\n      M.exception('La implementación usada no puede crear controles FullViewMapControl');\n    }\n    // 2. implementation of this control\n    const impl = new FullViewMapImplControl();\n    super(impl, 'FullViewMap');\n\n    /**\n     * Container of map\n     */\n    this.source_ = '.m-mapea-container';\n\n    // Event to catch onChange fullscreen state\n    document.addEventListener('fullscreenchange', e => this.checkFullScreen(e));\n    document.addEventListener('mozfullscreenchange', e => this.checkFullScreen(e));\n    document.addEventListener('webkitfullscreenchange', e => this.checkFullScreen(e));\n    document.addEventListener('msfullscreenchange', e => this.checkFullScreen(e));\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      html.querySelector('#btnFullView').addEventListener('click', e => this.clickFullView_(e));\n      // Añadir código dependiente del DOM\n      success(html);\n    });\n  }\n\n  /**\n   * This function activate o desactivate the fullscreen\n   *\n   *@function\n   */\n\n  clickFullView_(e) {\n    const map = this.map_;\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    if (!map) {\n      return;\n    }\n    if (this.isFullScreen()) {\n      this.exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.querySelector(this.source_) :\n          this.source_;\n      }\n      this.requestFullScreen(element);\n    }\n  }\n\n  /**\n   * This function request to fullscreen an element.\n   * @function\n   * @param {HTMLElement} element Element to request fullscreen\n   */\n  requestFullScreen(element) {\n    const btn = document.querySelector('#btnFullView');\n    btn.className = 'g-cartografia-cancelar';\n    btn.title = 'Cerrar Pantalla Completa';\n\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  /**\n   * This function check the element is currently in fullscreen.\n   *\n   * @public\n   * @function\n   * @return {boolean}\n   */\n  isFullScreen() {\n    return !!(document.webkitIsFullScreen ||\n      document.msFullscreenElement || document.fullscreenElement);\n  }\n\n  /**\n   * @public\n   * @function\n   * This function check fullscreen.\n   */\n  checkFullScreen(e) {\n    if (!document.webkitFullscreenElement && !document.mozFullScreenElement &&\n      !document.msFullscreenElement) {\n      const btn = document.querySelector('#btnFullView');\n      btn.className = 'g-cartografia-tamano';\n      btn.title = 'Pantalla Completa';\n    }\n  }\n\n  /**\n   * @public\n   * @function\n   * This function exit fullscreen.\n   */\n  exitFullScreen() {\n    const btn = document.querySelector('#btnFullView');\n    btn.className = 'g-cartografia-tamano';\n    btn.title = 'Pantalla Completa';\n\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof FullViewMapControl;\n  }\n}\n","/**\n * @module M/plugin/FullViewMap\n */\nimport 'assets/css/fullviewmap';\nimport FullViewMapControl from './fullviewmapcontrol';\nimport api from '../../api';\n\nexport default class FullViewMap extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options = {}) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Position of the Plugin\n     * Posible values: TR | TL | BL | BR\n     * @type {Enum}\n     */\n    this.position_ = options.position || 'TR';\n\n    /**\n     * Value of collapsed Map\n     *\n     * @private\n     * @type {boolean}\n     */\n    this.fullViewMap_ = false;\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.control_ = new FullViewMapControl();\n    this.controls_.push(this.control_);\n    this.map_ = map;\n\n    this.panel_ = new M.ui.Panel('panelFullViewMap', {\n      className: 'm-plugin-fullviewmap',\n      collapsible: false,\n      position: M.ui.position[this.position_],\n      collapsedButtonClass: 'g-cartografia-flecha-izquierda',\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls([this.control_]);\n    [this.control_, this.panel_, this.map_] = [null, null, null];\n  }\n\n  /**\n   * This function return the control of plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getControls() {\n    const aControl = [];\n    aControl.push(this.control_);\n    return aControl;\n  }\n\n  /**\n   * @getter\n   * @public\n   */\n  get name() {\n    return 'fullviewmap';\n  }\n\n  /**\n   * This function returns the facade map.\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  get map() {\n    return this.map_;\n  }\n\n  /**\n   * This function returns the position\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  get position() {\n    return this.position_;\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n}\n","import M$plugin$FullViewMap from './/facade/js/fullviewmap';\nimport M$control$FullViewMapControl from './/facade/js/fullviewmapcontrol';\nimport M$impl$control$FullViewMapControl from './/impl/ol/js/fullviewmapcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.FullViewMap = M$plugin$FullViewMap;\nwindow.M.control.FullViewMapControl = M$control$FullViewMapControl;\nwindow.M.impl.control.FullViewMapControl = M$impl$control$FullViewMapControl;\n"],"sourceRoot":""}